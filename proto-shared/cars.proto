syntax = "proto3";

package cars;

import "google/api/annotations.proto";

import "google/protobuf/timestamp.proto";


option go_package = "e-commerce-microservice/proto-shared/gen/pb";

service CarService {
  rpc CreateCar(CreateCarRequest) returns (CarResponse){
    option (google.api.http) = {
           post: "/v1/car/create"
           body: "*"
         };
  }
 rpc CreateCarWithImage(CreateCarWithImageRequest) returns (CarResponse){
    option (google.api.http) = {
           post: "/v1/car/create-with-image"
           body: "*"
         };
  }
  rpc GetCar(GetCarRequest) returns (CarResponse){
     option (google.api.http) = {
           get: "/v1/cars/{id}"
         };
  }
  rpc ListCars(ListCarsRequest) returns (ListCarsResponse){
        option (google.api.http) = {
           get: "/v1/cars"
         };
  }
  rpc UpdateCar(UpdateCarRequest) returns (CarResponse){
        option (google.api.http) = {
           post: "/v1/car/update"
           body: "*"
         };
  }
  rpc DeleteCar(DeleteCarRequest) returns (DeleteCarResponse) {
     option (google.api.http) = {
           delete: "/v1/car/{id}"
         };
  }
}

message Image {
    string filename = 1;
    bytes content = 2;
}

message CreateCarWithImageRequest {
  string name = 1;
  string brand = 2;
  string model = 3;
  int32 year = 4;
  int32 mileage = 5;
  string transmission = 6;
  string fuel_type = 7;
  string location = 8;
  string description = 9;
  Image image = 10;
  double price = 11;
  string currency = 12;
}


message Car {
  string id = 1;
  string name = 2;
  string brand = 3;
  string model = 4;
  int32 year = 5;
  int32 mileage = 6;
  string transmission = 7;
  string fuel_type = 8;
  string location = 9;
  string description = 10;
  repeated string images = 11;
  double price = 12;
  string currency = 13;
  bool is_sold = 14;
  google.protobuf.Timestamp created_at = 15;
  google.protobuf.Timestamp updated_at = 16;
}

message CreateCarRequest {
  string name = 1;
  string brand = 2;
  string model = 3;
  int32 year = 4;
  int32 mileage = 5;
  string transmission = 6;
  string fuel_type = 7;
  string location = 8;
  string description = 9;
  repeated string images = 10;
  double price = 11;
  string currency = 12;
}

message UpdateCarRequest {
  string id = 1;
  string name = 2;
  string brand = 3;
  string model = 4;
  int32 year = 5;
  int32 mileage = 6;
  string transmission = 7;
  string fuel_type = 8;
  string location = 9;
  string description = 10;
  repeated string images = 11;
  double price = 12;
  string currency = 13;
  bool is_sold = 14;
}

message GetCarRequest {
  string id = 1;
}

message DeleteCarRequest {
  string id = 1;
}

message ListCarsRequest {
  int32 limit = 1;                  // jumlah per halaman
  int32 offset = 2;                 // offset data (page * limit)
  string search = 3;                // cari nama/brand/model
  string brand = 4;                 // filter brand
  string location = 5;             // filter lokasi
  string currency = 6;             // filter berdasarkan mata uang
  bool is_sold = 7;                // filter status terjual
}

message CarResponse {
  Car car = 1;
}

message ListCarsResponse {
  repeated Car cars = 1;
  int32 total = 2;                 // total data (tanpa pagination)
}

message DeleteCarResponse {
  string message = 1;
}
